React?
UI를 구축하기 위한 JavaScript 라이브러리
SPA(Single Page Application) 기반의 프론트엔드 개발 프레임워크 중 하나
컴포넌트 단위의 독립적인 블록을 이용한 개발방법 이용
다른 SPA 프레임워크인 무혬건, VueJS 보다 월등한 인기
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
SPA?
Single Page Application
한개의 페이지로 이루어진 애플리케이션
---------------------------------------------------------------
왜 사용하는가?
기존에 MPA(Multi Page Application)는 누를 때만다 페이지가 리렌더링되는 문제가 발생
SPA를 사용하면 데이터만 변경하여 부드러운 UX를 구현할 수 있다.
---------------------------------------------------------------
특징 
1. 딱 한개의 페이지로 구성된 웹 앱
2. 서버에 1회 리소스를 요청 (index.html 1개)
3. 그 이후에 필요할 때 데이터만 받아와 기존 페이지 수정하는 방식
4. 페이지 깜빡임이 없음, 부드럽고 자연스러운 UX 구현
5. 비슷한 기술들이 존재 (Angular, Vue 등), 각각의 기술마다 차이점 존재
---------------------------------------------------------------
SPA의 단점
SEO (Search Engine Optimization) 를 위해 HTML 페이지 전체가 필요하지만
SPA 페이지의 HTML 파일들은 모두 단순하게 구성되어있다.

<html>
<head>
  <title>리액트 프로젝트</title>
  <link rel="stylesheet" href="app.css" type="text/css">
</head>
<body>
  <div id="app"></div>
  <script src="app.js"></script>
</body>
</html>

따라서 Search Engine이 페이지를 식별하는데 어려움이 있다. 페이지 검색 빈도 하락
이를 해결하기 위해 next.js 등장 (추후 공부)
결론적으로 검색 로봇이 페이지를 감지하기 어려움
---------------------------------------------------------------
SPA 프레임워크 종류
1. ReactJS
- 페이스북이 만들고 유지보수
- 선발주자인 만큼 막강한 커뮤니티와 자료 보유
2. VueJS
- 배우기 쉽고 단순하다
- 후발주자라 마켓 점유율이 적다
- 꾸준한 성장세를 보인다
3. AngularJS
- 안정적인 프레임워크
- 어렵고 프로그램이 어렵다. 점유율이 가장 낮음
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
왜 리액트인가
1. React Native와 상생, VR 까지 활용
2. 막강한 커뮤니티
3. 채용공고가 많다..
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
컴포넌트란?
리액트가 채택한 개발방법
벽돌이나 레고처럼 쌓아 올리는 것
- SPA 기반 : 컴포넌트 단위로 변경사항을 반영하기 때문에 깜빡임 X (렌더링)
- MPA 기반 : 하나의 변경사항을 반영하기 위해 전체페이지 Re-load

